name: Deployment workflow

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string
      ref:
        type: string
        description: Branch, tag or SHA
    secrets:
      YC_SA_JSON_CREDENTIALS:
        required: true
      YA_SERVERLESS_FOLDER_ID:
        required: true
      YC_CR_ID:
        required: true
      YC_CICD_USER:
        required: true

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.target }}
    env:
      GITHUB_SHA: ${{ inputs.ref && GITHUB_SHA || inputs.ref }}
      BUILD_APP_VERSION: ${{ vars.BUILD_APP_VERSION }}
    outputs:
      GITHUB_SHA_SHORT: ${{ steps.output_tag.outputs.GITHUB_SHA_SHORT }}
      APP_NAME: ${{ steps.output_tag.outputs.APP_NAME }}
    steps:
      - run: echo "üéâ ref ${{ inputs.ref }}"
      - run: echo "üéâ sha ${{ GITHUB_SHA }}"
      - name: Setup Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }}
      - name: Set Environment Variables
        uses: ./.github/actions/set_environment_variables
        with:
          file: ./.build/.env
      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
      - name: Build and push image to Yandex Cloud Container Registry
        env:
          CONTAINER_REGISTRY: ${{ secrets.YC_CR_ID }}
        run: |
          make build-docker
          make push-docker
      - name: Output tag
        id: output_tag
        run: |
          echo "GITHUB_SHA_SHORT=${{env.GITHUB_SHA_SHORT}}" >> $GITHUB_OUTPUT
          echo "APP_NAME=${{env.APP_NAME}}" >> $GITHUB_OUTPUT
      - name: Add specific tag
        if: ${{ inputs.target == 'Production' }}
        run: |
          docker tag ${{ secrets.YC_CR_ID }}${{ env.APP_NAME }}:${{env.GITHUB_SHA_SHORT}} ${{ secrets.YC_CR_ID }}${{ env.APP_NAME }}:latest
          docker push ${{ secrets.YC_CR_ID }}${{ env.APP_NAME }}:latest

  deploy:
    name: Deploy
    needs:
      - publish
    permissions:
      contents: none
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.target }}
    env:
      GITHUB_SHA_SHORT: ${{ needs.publish.outputs.GITHUB_SHA_SHORT }}
      APP_NAME: ${{ needs.publish.outputs.APP_NAME }}
    steps:
      - run: echo "üéâ target evn ${{ inputs.target }}"
      - run: echo "üíÄ % cores ${{ vars.YC_REVISION_CORE_FRACTION }}"
      - run: echo "ü§¨ suffix ${{ vars.YC_APP_NAME_SUFFIX }}"
      - run: echo "üñäÔ∏è service-name ${{ env.APP_NAME }}"
      - run: echo "üìñ tag ${{ env.GITHUB_SHA_SHORT }}"

      - name: Deploy
        uses: yc-actions/yc-sls-container-deploy@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          container-name: ${{ env.APP_NAME }}${{ vars.YC_APP_NAME_SUFFIX }}
          folder-id: ${{ secrets.YA_SERVERLESS_FOLDER_ID }}
          revision-service-account-id: ${{ secrets.YC_CICD_USER }}
          revision-cores: ${{ vars.YC_REVISION_CORES }}
          revision-memory: ${{ vars.YC_REVISION_MEMORY }}
          revision-core-fraction: ${{ vars.YC_REVISION_CORE_FRACTION }}
          revision-concurrency: ${{ vars.YC_REVISION_CONCURRENCY }}
          revision-image-url: ${{ secrets.YC_CR_ID }}${{ env.APP_NAME }}:${{ env.GITHUB_SHA_SHORT }}
          revision-execution-timeout: 3
