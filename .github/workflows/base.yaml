# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build, Publish & Deploy

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "release"
      - "release/*"

jobs:
  build:
    name: Build
    uses: ./.github/workflows/build.yaml
    permissions:
      checks: write
      pull-requests: write
    secrets: inherit

  publish:
    name: Publish
    needs: build
    uses: ./.github/workflows/publish.yaml
    with:
      ref: ${{ github.GITHUB_SHA }}
    secrets: inherit

  deployment:
    name: Deploy
    needs: publish
    if: ${{ github.event_name == 'pull_request' }}
    uses: ./.github/workflows/deploy.yaml
    with:
      target: "Beta"
      tag: ${{ needs.publish.outputs.GITHUB_SHA_SHORT }}
      revision-core-fraction: 5
      suffix: "-beta"
      container-name: ${{ needs.publish.outputs.APP_NAME }}
    secrets: inherit

  release:
    name: Create relase
    permissions: write-all
    needs: deployment
    runs-on: ubuntu-latest
    environment: "Beta"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date -u +'%Y%m%d%H%M')"
      - name: Create tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GH_PAT }}
          custom_tag: ${{ steps.date.outputs.date }}

  automerge:
    name: Automerge PR
    needs:
      - release
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get PR name
        id: branch
        run: |
          echo PULL_REQUEST_NAME=$(git describe --all  --contains ${{github.GITHUB_SHA}}) >> $GITHUB_OUTPUT
      - id: automerge
        name: automerge
        uses: "pascalgn/automerge-action@v0.15.6"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          MERGE_COMMIT_MESSAGE: "pull request merged automatically"
          MERGE_REQUIRED_APPROVALS: 1
          MERGE_DELETE_BRANCH: true
          MERGE_ERROR_FAIL: true
          PULL_REQUEST: ${{ github.ref_name }}
          BASE_BRANCHES: "main"
